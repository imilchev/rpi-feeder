# https://taskfile.dev

version: '3'

vars:
  GREETING: Hello, World!

tasks:
  build:
    desc: Build module
    silent: false
    dir: cmd
    cmds:
      - go build -o ../output/rpi-feeder .
    sources:
      - ../**/*.go
      - go.mod
    generates:
      - ../output/rpi-feeder
    method: checksum
    
  build:pi:
    desc: Build module for RPi
    silent: false
    dir: cmd
    cmds:
      - GOOS=linux GOARCH=arm go build -o ../output/pi/rpi-feeder .
    sources:
      - ../**/*.go
      - go.mod
    generates:
      - ../output/pi/rpi-feeder
    method: checksum

  lint:
    cmds:
      - golangci-lint run
    silent: false

  test:
    cmds:
      - mkdir -p output
      - CGO_ENABLED=0 go test -v -coverprofile=output/c.out -timeout 120s {{.UNIT_TEST_PACKAGES}}
      - go tool cover -html=output/c.out -o ./output/coverage.html
    vars:
      UNIT_TEST_PACKAGES: ./pkg/...

  test:ci:
    desc: Test the code in a CI environment. Makes sure that a PostgreSQL instance is running in Podman. Output test report as JSON and XML in output/.
    cmds:
      - mkdir -p output/
      - go install gotest.tools/gotestsum@latest
      - cmd: gotestsum --junitfile output/tests.xml --jsonfile output/tests.json -- -p 1 -coverprofile=output/coverage.out ./...
        ignore_error: true
    silent: false

  install:migrate:
    desc: Installs migrate package. Needed to be able to use the migrate CLI.
    cmds:
      - go install -tags 'postgres' github.com/golang-migrate/migrate/v4/cmd/migrate@v4.15.1
    silent: true