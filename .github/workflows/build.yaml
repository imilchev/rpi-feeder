name: Build
on:
  push:
    branches:
      - main
  pull_request:
permissions:
  contents: read
  # Optional: allow read access to pull request. Use with `only-new-issues` option.
  # pull-requests: read

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.43

  build:
    name: Build
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14.1-alpine3.15
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: SuperSecret
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    container:
      image: ghcr.io/imilchev/go-devcontainer:1.17.6
    permissions:
      id-token: write
      contents: read
      checks: write
    env:
      FEEDER_TEST_DB_HOST: postgres
    steps:
      - uses: actions/checkout@v2

      - name: Build
        run: task build

      - name: Test
        run: task test:ci

      - uses: dorny/test-reporter@v1
        if: success() || failure()   
        with:
          name: Report test results      # Name of the check run which will be created
          path: 'output/tests.xml'       # Path to test results (inside artifact .zip)
          reporter: java-junit           # Format of test results